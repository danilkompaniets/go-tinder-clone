syntax = "proto3";

option go_package = "/gen";
import "google/protobuf/timestamp.proto";

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string firstName = 4;
  string bio = 5;
  string gender = 6;
  google.protobuf.Timestamp birthDate = 7;
  string city = 8;
  string avatarUrl = 9;
  google.protobuf.Timestamp createdAt = 10;
  google.protobuf.Timestamp updatedAt = 11;
}

message CreateUserRequest {
  User user = 1;
}

message CreateUserResponse {}

message UserPosition {
  float lon = 1;
  float lat = 2;
  int32 radius = 3;
}

message Preferences {
  string id = 1;
  string user_id = 2;
  string preferredGender = 3;
  int32 ageMin = 4;
  int32 ageMax = 5;
  UserPosition position = 6;
}

message SelectUsersByPreferencesRequest {
  string userId = 1;
  string preferredGender = 2;
  int32 ageMin = 3;
  int32 ageMax = 4;
  UserPosition position = 5;
  int32 limit = 6;
  int32 offset = 7;
}

message SelectUsersByPreferencesResponse {
  repeated User users = 1;
}

service user {
  rpc CreateUserFromAuth (CreateUserRequest) returns (CreateUserResponse);
  rpc   SelectUsersByPreferences(SelectUsersByPreferencesRequest) returns (SelectUsersByPreferencesResponse);
}

message RefreshTokenRequest {
  string refreshToken = 1;
}

message RefreshTokenResponse {
  string accessToken = 1;
  string refreshToken = 2;
}

service auth {
  rpc RefreshToken (RefreshTokenRequest) returns (RefreshTokenResponse);
}

message MatchModel {
  string fromId = 1;
  string toId = 2;
  bool fromDecision = 3;
  bool toDecision = 4;
}

message GetDecisionsUserIdRequest {
  string userId = 1;
}

message GetDecisionsUserIdResponse {
  repeated string userIds = 1;
}

service match {
  rpc GetDecisionsUserId (GetDecisionsUserIdRequest) returns (GetDecisionsUserIdResponse);
}